//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSArray, NSLock, NSURL;
@protocol FFAVPlayerControllerDelegate, OS_dispatch_queue;

@interface FFAVPlayerController : NSObject
{
    NSObject<OS_dispatch_queue> *_queue;	// 8 = 0x8
    NSLock *_locker;	// 16 = 0x10
    struct coreplayer *_player;	// 24 = 0x18
    _Bool _muted;	// 32 = 0x20
    NSURL *_url;	// 40 = 0x28
    id _avsourceObject;	// 48 = 0x30
    struct DEMUXER_AVSRC_CTX _avsrc_ctx;	// 56 = 0x38
    double _lastUpdatedTime;	// 1160 = 0x488
    unsigned int _lastSubtitleEncoding;	// 1168 = 0x490
    long long _subtitleStartTime;	// 1176 = 0x498
    long long _subtitleDuration;	// 1184 = 0x4a0
    _Bool _allowBackgroundPlayback;	// 1192 = 0x4a8
    _Bool _enableBuiltinSubtitleRender;	// 1193 = 0x4a9
    _Bool _shouldAutoPlay;	// 1194 = 0x4aa
    id <FFAVPlayerControllerDelegate> _delegate;	// 1200 = 0x4b0
    long long _streamDiscardOption;	// 1208 = 0x4b8
    double _throttleCurrentPlaybackTimeChangeNotification;	// 1216 = 0x4c0
    unsigned long long _minPlayableBufferSize;	// 1224 = 0x4c8
    long long _decodingMode;	// 1232 = 0x4d0
    long long _syncMode;	// 1240 = 0x4d8
}

+ (id)FFmpegHttpHeadersStringFromOptions:(id)arg1;	// IMP=0x00000000000310f8
+ (id)formatTimeInterval:(double)arg1 isLeft:(_Bool)arg2;	// IMP=0x0000000000031038
+ (id)convertISO639LanguageCodeToEnName:(id)arg1;	// IMP=0x0000000000030e24
+ (id)prepareDemuxerAVSrcContextWithURL:(id)arg1 withOptions:(id)arg2 outAVOptions:(struct AVOptionList **)arg3 outAVSrcContext:(struct DEMUXER_AVSRC_CTX *)arg4 outBoolResult:(_Bool *)arg5;	// IMP=0x000000000002dae4
+ (void)freeAVOptions:(struct AVOptionList *)arg1;	// IMP=0x000000000002daa8
+ (struct AVOptionList *)prepareAVOptions:(id)arg1;	// IMP=0x000000000002d318
+ (int)convertFFmpegErrorCode:(int)arg1;	// IMP=0x000000000002d2dc
@property(nonatomic) long long syncMode; // @synthesize syncMode=_syncMode;
@property(nonatomic) long long decodingMode; // @synthesize decodingMode=_decodingMode;
@property(nonatomic) unsigned long long minPlayableBufferSize; // @synthesize minPlayableBufferSize=_minPlayableBufferSize;
@property(nonatomic) double throttleCurrentPlaybackTimeChangeNotification; // @synthesize throttleCurrentPlaybackTimeChangeNotification=_throttleCurrentPlaybackTimeChangeNotification;
@property(nonatomic) long long streamDiscardOption; // @synthesize streamDiscardOption=_streamDiscardOption;
@property(nonatomic) _Bool shouldAutoPlay; // @synthesize shouldAutoPlay=_shouldAutoPlay;
@property(nonatomic) _Bool enableBuiltinSubtitleRender; // @synthesize enableBuiltinSubtitleRender=_enableBuiltinSubtitleRender;
@property(nonatomic) _Bool allowBackgroundPlayback; // @synthesize allowBackgroundPlayback=_allowBackgroundPlayback;
@property(nonatomic) __weak id <FFAVPlayerControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) NSURL *mediaURL; // @synthesize mediaURL=_url;
- (void).cxx_destruct;	// IMP=0x000000000003171c
@property(readonly, nonatomic) _Bool canApplyHWDecoder;
- (int)translateAVDecodingMode:(long long)arg1;	// IMP=0x00000000000314a0
@property(nonatomic) float saturation;
@property(nonatomic) float contrast;
@property(nonatomic) float brightness;
@property(readonly, nonatomic) long long avFramerate;
@property(readonly, nonatomic) long long avBitrate;
@property(nonatomic) float videoAspectRatio;
- (void)applicationDidBecomeActive:(id)arg1;	// IMP=0x0000000000030e08
- (void)applicationWillResignActive:(id)arg1;	// IMP=0x0000000000030dbc
- (void)playerDidSubtitleChangeWithStartTime:(long long)arg1 duration:(long long)arg2 text:(const char *)arg3;	// IMP=0x0000000000030a88
- (unsigned int)playerQuerySubtitleEncoding:(const char *)arg1;	// IMP=0x00000000000309ac
- (void)playerDidFramerateChange:(int)arg1;	// IMP=0x000000000003081c
- (void)playerDidBitrateChange:(int)arg1;	// IMP=0x000000000003068c
- (void)playerDidBufferingProgressChange:(double)arg1;	// IMP=0x00000000000304f4
- (void)playerDidStatusChange:(int)arg1;	// IMP=0x0000000000030348
- (void)playerDidCurTimeChange:(double)arg1;	// IMP=0x0000000000030184
- (void)playerDidOccurError:(int)arg1;	// IMP=0x000000000002fdf0
- (void)endedInterruption;	// IMP=0x000000000002fdd8
- (void)beganInterruption;	// IMP=0x000000000002fdc0
- (void)setLastSubtitleEncoding:(unsigned int)arg1;	// IMP=0x000000000002fd64
- (void)setSubtitleBackgroundColor:(id)arg1;	// IMP=0x000000000002fd04
- (void)setSubtitleTextColor:(id)arg1;	// IMP=0x000000000002fca4
- (void)setSubtitleFont:(id)arg1;	// IMP=0x000000000002fc44
- (void)closeSubtitleFile;	// IMP=0x000000000002fc2c
- (_Bool)openSubtitleFile:(id)arg1;	// IMP=0x000000000002fb98
- (void)switchSubtitleStream:(int)arg1;	// IMP=0x000000000002fb28
- (void)switchAudioTracker:(int)arg1;	// IMP=0x000000000002fab8
@property(readonly, nonatomic) NSArray *subtitleTracks;
@property(readonly, nonatomic) NSArray *audioTracks;
@property(readonly, nonatomic) long long currentSubtitleTrack;
@property(readonly, nonatomic) long long currentAudioTrack;
- (void)setPlaybackSpeed:(float)arg1;	// IMP=0x000000000002f514
- (float)playbackSpeed;	// IMP=0x000000000002f4f8
- (int)bufferingProgress;	// IMP=0x000000000002f4c8
- (int)realtimeBitrate;	// IMP=0x000000000002f4a8
- (void)enableTrackBitrate:(_Bool)arg1;	// IMP=0x000000000002f490
- (int)realtimeFramerate;	// IMP=0x000000000002f470
- (void)enableTrackFramerate:(_Bool)arg1;	// IMP=0x000000000002f458
- (void)seekto:(double)arg1;	// IMP=0x000000000002f438
- (void)stop;	// IMP=0x000000000002f3c8
- (void)resume;	// IMP=0x000000000002f3b0
- (void)pause;	// IMP=0x000000000002f398
- (_Bool)play:(double)arg1;	// IMP=0x000000000002f240
- (double)currentPlaybackTime;	// IMP=0x000000000002f1cc
- (double)duration;	// IMP=0x000000000002f194
@property(nonatomic, getter=isMuted) _Bool muted;
- (long long)playerState;	// IMP=0x000000000002f0d0
- (struct CGSize)videoFrameSize;	// IMP=0x000000000002f094
- (_Bool)hasSubtitle;	// IMP=0x000000000002f06c
- (_Bool)hasAudio;	// IMP=0x000000000002f044
- (_Bool)hasDolby;	// IMP=0x000000000002f01c
- (_Bool)hasVideo;	// IMP=0x000000000002eff4
- (_Bool)isFullscreen;	// IMP=0x000000000002efc4
- (void)fullScreen:(_Bool)arg1;	// IMP=0x000000000002ee8c
- (id)drawableView;	// IMP=0x000000000002ee50
- (_Bool)openMedia:(id)arg1 withOptions:(id)arg2;	// IMP=0x000000000002e178
- (void)dealloc;	// IMP=0x000000000002d188
- (id)init;	// IMP=0x000000000002cf30

@end

