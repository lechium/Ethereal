//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class EAGLContext, EAGLSharegroup, GLProgramWrapper, NSMutableArray, NSMutableDictionary;
@protocol OS_dispatch_queue;

@interface GPUAVImageContext : NSObject
{
    NSMutableDictionary *shaderProgramCache;	// 8 = 0x8
    NSMutableArray *shaderProgramUsageHistory;	// 16 = 0x10
    EAGLSharegroup *_sharegroup;	// 24 = 0x18
    EAGLContext *_context;	// 32 = 0x20
    GLProgramWrapper *_currentShaderProgram;	// 40 = 0x28
    NSObject<OS_dispatch_queue> *_contextQueue;	// 48 = 0x30
}

+ (_Bool)supportsFastTextureUpload;	// IMP=0x000000000001bd24
+ (struct CGSize)sizeThatFitsWithinATextureForSize:(struct CGSize)arg1;	// IMP=0x000000000001bad8
+ (_Bool)deviceSupportsFramebufferReads;	// IMP=0x000000000001ba64
+ (_Bool)deviceSupportsRedTextures;	// IMP=0x000000000001b9f0
+ (_Bool)deviceSupportsOpenGLESExtension:(id)arg1;	// IMP=0x000000000001b8dc
+ (int)maximumVaryingVectorsForThisDevice;	// IMP=0x000000000001b838
+ (int)maximumTextureUnitsForThisDevice;	// IMP=0x000000000001b794
+ (int)maximumTextureSizeForThisDevice;	// IMP=0x000000000001b6f0
+ (void)setActiveShaderProgram:(id)arg1;	// IMP=0x000000000001b5e4
+ (void)useImageProcessingContext;	// IMP=0x000000000001b540
+ (id)sharedContextQueue;	// IMP=0x000000000001b4ec
+ (id)sharedImageProcessingContext;	// IMP=0x000000000001b42c
+ (void *)contextKey;	// IMP=0x000000000001b420
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *contextQueue; // @synthesize contextQueue=_contextQueue;
@property(retain, nonatomic) GLProgramWrapper *currentShaderProgram; // @synthesize currentShaderProgram=_currentShaderProgram;
- (void).cxx_destruct;	// IMP=0x000000000001bdfc
@property(readonly, retain, nonatomic) EAGLContext *context; // @synthesize context=_context;
- (id)createContext;	// IMP=0x000000000001bcd8
- (void)useSharegroup:(id)arg1;	// IMP=0x000000000001bca0
- (id)programForVertexShaderString:(id)arg1 fragmentShaderString:(id)arg2;	// IMP=0x000000000001bb84
- (void)presentBufferForDisplay;	// IMP=0x000000000001bb40
- (id)init;	// IMP=0x000000000001b2fc

@end

